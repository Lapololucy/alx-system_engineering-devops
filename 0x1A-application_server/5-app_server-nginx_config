
# Default server configuration
#
#upstream backend_server {
#	server 34.207.237.97;
#	server 52.91.125.244:80;
#}
#
server {
	#listen 80 default_server;
	#listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/html;

 	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name 173937-web-01;
	try_files $uri $uri/ =404;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		include proxy_params;
		proxy_pass http://localhost:5003/2-hbnb;
	}

	error_page 404 /404.html;

	add_header X-Serverd-By '173937-web-01';

	location = /404.html {
		root /var/www/html;
		internal;
	}

	location = /redirect_me {
		return 301 $scheme://youtube.com/@lapololucy92;
	}

	location = /airbnb-onepage {
		include proxy_params;
		proxy_pass http://localhost:5000/airbnb-onepage;
	}

	location ~ /airbnb-dynamic/number_odd_or_even/(\d+)$ {
		include proxy_params;
		proxy_pass http://127.0.0.1:5001/number_odd_or_even/$1;
	}

	location /api/ {
		include proxy_params;
		proxy_pass http://localhost:5002/api/;
	}

	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
